@import 'variaveis-mixins.scss';

// Variáveis do Grid
$colunas: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

// Box-sizing
*,
*::before,
*::after {
  box-sizing: border-box;
}

// Função de grid
@function grid($coluna, $offset: false) {
  $width: calc($coluna /  $colunas) * 100 + '%';
  $result: calc(#{$width} - #{$gutter});
  @if $offset == offset {
    $gutter: calc($gutter / 2);
    $result: calc(#{$width} + #{$gutter});
  }

  @return $result;
}

@for $i from 1 through $colunas {
  .grid-#{$i} {
    width: grid($i);
  }
}

// Estrutura do Grid
@mixin estrutura-grid {
  float: left;
  min-height: 1px;
  margin-left: calc($gutter / 2);
  margin-right: calc($gutter / 2);
  @include device(s) {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^='grid-'] {
  @include estrutura-grid;
}

// Gera as classes de offset
@for $i from 1 through $colunas {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset !optional;
  }
}

@include device(s) {
  %offset {
    margin-left: 0;
  }
}

// Clearfix
@mixin clearfix {
  &::after,
  &::before {
    content: '';
    display: table;
    clear: both;
  }
}

// Container
@mixin container {
  max-width: $l-device;
  margin: 0 auto;
  position: relative;
  @include device(m) {
    max-width: $m-device;
  }
  @include device(s) {
    max-width: $s-device;
    padding-left: 10px;
    padding-right: 10px;
  }
  @include clearfix;
}

.container {
  @include container;
}

// row
@mixin row {
  position: relative;
  margin-left: calc(-#{$gutter} / 2);
  margin-right: calc(-#{$gutter} / 2);
  @include device(s) {
    margin-left: 0;
    margin-right: 0;
  }
  @include clearfix;
}

.row {
  @include row;
}
